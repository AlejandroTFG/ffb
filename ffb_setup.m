%@ UAS Formation Flight Benchmark.
% This file takes all necessary steps to set up the FFB.
pathOfThisScript_ffbuser = mfilename('fullpath');
[pathstr, name, ext] = fileparts(pathOfThisScript_ffbuser);
startpath = pathstr;
% First add everything in the current folder.
addpath(genpath(pathstr));
searchdepth = 0;
longcall('uavsimblockset_addtomatlabpath.m', pwd, searchdepth);
longcall('trajectory_addtomatlabpath.m', pwd, searchdepth);
longcall('ffb_addtomatlabpath.m', pwd, searchdepth);

% Now, either re-load the workspace generated by an earlier run or
% re-initialize:
runsetup = false;
if runsetup    
    % Configure sampling times:
    uavsim.simConfig.tsample_model = 1/100;
    uavsim.simConfig.tsample_UAV3D = findclosemultiple(1/30, uavsim.simConfig.tsample_model);
    
    % Max number of UAS, needed for some fixed-dimension signals:
    uavsim.nUAS_max = 10;
    
    % Generate trajectorie(s):
    args = {};
    args{end+1} = 20;
    args{end+1} = uavsim;
    benchmarkTrajectory = cachedcall(@ffb_generatebenchmarkTrajectory,args);
    
    % Run user-defined configuration script (wind, initial aircraft states etc.)
    ffb_configure;
    
    % Compute trim states and inputs:
    ffb_trim;
    ffb_generateInitialBusValues
    setupForLatexFigures;
    
    % Load baseline controllers:
    cs = load('baselineControllers.mat');
    uavsim.ap.control = cs.controllers.control;
    
    % Save generated ffb workspace:
    save('ffb_workspace.mat');
    disp([mfilename '>> ffb freshly set up, you are good to go.']);
else
    load('ffb_workspace.mat');
    disp([mfilename '>> ffb workspace loaded, you are good to go.']);
end